version: 2.1

jobs:
  setup_on_container:
    docker:
      - image: cimg/python:3.7.10
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Clone YOLOv5 resources
          command: |
            git clone https://github.com/ultralytics/yolov5
      - run:
          name: Setup Python environment for YOLOv5
          command: |
            cd yolov5
            pyenv install 3.7.10
            pyenv local 3.7.10
            pip install -r requirements.txt
      - run:
          name: Set up MaskDataSet from ROBOFLOW (needs registration)
          command: |
            mkdir MaskDataSet
            cd MaskDataSet
            curl -L "https://public.roboflow.com/ds/9rYgiWaqnY?key=$ROBOFLOW_KEY" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip
            cp ../data.yaml .
            cd ..
      - persist_to_workspace:
          root: .
          paths:
            - "yolov5"
            - "MaskDataSet"

  train_to_test_on_gpu:
    machine:
      resource_class: gpu.nvidia.small
      image: ubuntu-2004-cuda-11.4:202110-01
    steps:
      - run:
          name: Check GPU status
          command: nvidia-smi
      - attach_workspace:
          at: .
      - run:
          name: Setup Python environment for YOLOv5
          command: |
            cd yolov5
            pyenv local 3.7.10
      - run:
          name: Train MaskDataSet
          command: |
            python train.py --data ../MaskDataSet/data.yml --cfg yolov5s.yaml --weights yolov5s.pt --batch-size 16 --epachs 10
            cd ..
      - run:
          name: Test mask detection
          command: |
            cd yolov5
            python detect.py --weights ./runs/train/exp/weights/best.pt --img 320 --conf 0.75 --source ../images/face_w_mask3.jpeg
            python detect.py --weights ./runs/train/exp/weights/best.pt --img 320 --conf 0.75 --source ../images/face_w_mask4.jpeg
            python detect.py --weights ./runs/train/exp/weights/best.pt --img 320 --conf 0.75 --source ../images/face_wo_mask2.jpeg
            zip -r runs/result.zip runs/detect runs/train/exp/weights                        
      - store_artifacts:
          path: yolov5/runs/result.zip
          destination: result_on_gpu.zip

workflows:
  mask_detection_training:
    jobs:
      - setup_on_container:
          context:
            - docker
      - train_to_test_on_gpu:
          requires:
            - setup_on_container
